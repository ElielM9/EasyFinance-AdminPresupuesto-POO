const expensesList=document.querySelector("#expenses ul");let budget;function startApp(){requestName(),requestBudget(),budgetFormEvents()}document.addEventListener("DOMContentLoaded",startApp);class Budget{constructor(e){this.budgetTotal=e,this.budgetAvailable=e,this.expenses=[]}}class UserInterface{insertName(e){document.querySelector(".budget__heading--user-name").textContent=e+"!"}insertBudget(e){const{budgetTotal:t,budgetAvailable:n}=e;let u=t.toLocaleString("es-MX",{style:"currency",currency:"MXN"}),r=n.toLocaleString("es-MX",{style:"currency",currency:"MXN"});document.querySelector("#budgetCardTotal").textContent=""+u,document.querySelector("#budgetCardAvailable").textContent=""+r}}const userInterface=new UserInterface;function requestName(){let e;do{e=prompt("¿Cuál es tu nombre?"),e||alert("Por favor, introduce un nombre válido.")}while(!e);userInterface.insertName(e)}function requestBudget(){const e=Number(prompt("¿Cuál es tu presupuesto?"));(""===e||null===e||isNaN(e)||e<=0)&&window.location.reload(),budget=new Budget(e),userInterface.insertBudget(budget)}function budgetFormEvents(){document.querySelector("#budgetForm").addEventListener("submit",addExpense)}function addExpense(e){e.preventDefault();document.querySelector("#expenseName").value,document.querySelector("#expenseAmount").value,document.querySelector("#expenseCategory").value}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZXhwZW5zZXNMaXN0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYnVkZ2V0Iiwic3RhcnRBcHAiLCJyZXF1ZXN0TmFtZSIsInJlcXVlc3RCdWRnZXQiLCJidWRnZXRGb3JtRXZlbnRzIiwiYWRkRXZlbnRMaXN0ZW5lciIsIkJ1ZGdldCIsIltvYmplY3QgT2JqZWN0XSIsImJ1ZGdldFRvdGFsIiwidGhpcyIsImJ1ZGdldEF2YWlsYWJsZSIsImV4cGVuc2VzIiwiVXNlckludGVyZmFjZSIsInVzZXJOYW1lIiwidGV4dENvbnRlbnQiLCJxdWFudGl0eSIsImZvcm1hdHRlZFRvdGFsIiwidG9Mb2NhbGVTdHJpbmciLCJzdHlsZSIsImN1cnJlbmN5IiwiZm9ybWF0dGVkQXZhaWxhYmxlIiwidXNlckludGVyZmFjZSIsInByb21wdCIsImFsZXJ0IiwiaW5zZXJ0TmFtZSIsInVzZXJCdWRnZXQiLCJOdW1iZXIiLCJpc05hTiIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVsb2FkIiwiaW5zZXJ0QnVkZ2V0IiwiYWRkRXhwZW5zZSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIl0sIm1hcHBpbmdzIjoiQUFDQSxNQUFNQSxhQUFlQyxTQUFTQyxjQUFjLGdCQUM1QyxJQUFJQyxPQUtKLFNBQVNDLFdBQ1BDLGNBQ0FDLGdCQUNBQyxtQkFMRk4sU0FBU08saUJBQWlCLG1CQUFvQkosVUFTOUMsTUFBTUssT0FDSkMsWUFBWUMsR0FDVkMsS0FBS0QsWUFBY0EsRUFDbkJDLEtBQUtDLGdCQUFrQkYsRUFDdkJDLEtBQUtFLFNBQVcsSUFJcEIsTUFBTUMsY0FDSkwsV0FBV00sR0FDY2YsU0FBU0MsY0FDOUIsK0JBSWFlLFlBQWlCRCxFQUFILElBRy9CTixhQUFhUSxHQUNYLE1BQU1QLFlBQUVBLEVBQVdFLGdCQUFFQSxHQUFvQkssRUFHekMsSUFBSUMsRUFBaUJSLEVBQVlTLGVBQWUsUUFBUyxDQUN2REMsTUFBTyxXQUNQQyxTQUFVLFFBRVJDLEVBQXFCVixFQUFnQk8sZUFBZSxRQUFTLENBQy9EQyxNQUFPLFdBQ1BDLFNBQVUsUUFJWnJCLFNBQVNDLGNBQ1Asb0JBQ0FlLFlBQWMsR0FBR0UsRUFDbkJsQixTQUFTQyxjQUNQLHdCQUNBZSxZQUFjLEdBQUdNLEdBS3ZCLE1BQU1DLGNBQWdCLElBQUlULGNBRzFCLFNBQVNWLGNBQ1AsSUFBSVcsRUFHSixHQUNFQSxFQUFXUyxPQUFPLHVCQUdiVCxHQUNIVSxNQUFNLGlEQUlBVixHQUdWUSxjQUFjRyxXQUFXWCxHQUczQixTQUFTVixnQkFDUCxNQUFNc0IsRUFBYUMsT0FBT0osT0FBTyw4QkFDZixLQUdoQkcsR0FDZSxPQUFmQSxHQUNBRSxNQUFNRixJQUNOQSxHQUFjLElBRWRHLE9BQU9DLFNBQVNDLFNBSWxCOUIsT0FBUyxJQUFJTSxPQUFPbUIsR0FHcEJKLGNBQWNVLGFBQWEvQixRQUc3QixTQUFTSSxtQkFFWU4sU0FBU0MsY0FBYyxlQUMvQk0saUJBQWlCLFNBQVUyQixZQUd4QyxTQUFTQSxXQUFXQyxHQUNsQkEsRUFBRUMsaUJBR3VCcEMsU0FBU0MsY0FBYyxnQkFBZ0JvQyxNQUNyQ3JDLFNBQVNDLGNBQWMsa0JBQWtCb0MsTUFFbEVyQyxTQUFTQyxjQUFjLG9CQUFvQm9DIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBWYXJpYWJsZXMgeSBzZWxlY3RvcmVzICovXG5jb25zdCBleHBlbnNlc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZXhwZW5zZXMgdWxgKTtcbmxldCBidWRnZXQ7XG5cbi8qIEV2ZW50b3MgKi9cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoYERPTUNvbnRlbnRMb2FkZWRgLCBzdGFydEFwcCk7XG5cbmZ1bmN0aW9uIHN0YXJ0QXBwKCkge1xuICByZXF1ZXN0TmFtZSgpO1xuICByZXF1ZXN0QnVkZ2V0KCk7XG4gIGJ1ZGdldEZvcm1FdmVudHMoKTtcbn1cblxuLyogQ2xhc2VzICovXG5jbGFzcyBCdWRnZXQge1xuICBjb25zdHJ1Y3RvcihidWRnZXRUb3RhbCkge1xuICAgIHRoaXMuYnVkZ2V0VG90YWwgPSBidWRnZXRUb3RhbDtcbiAgICB0aGlzLmJ1ZGdldEF2YWlsYWJsZSA9IGJ1ZGdldFRvdGFsO1xuICAgIHRoaXMuZXhwZW5zZXMgPSBbXTtcbiAgfVxufVxuXG5jbGFzcyBVc2VySW50ZXJmYWNlIHtcbiAgaW5zZXJ0TmFtZSh1c2VyTmFtZSkge1xuICAgIGNvbnN0IGJ1ZGdldFVzZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAuYnVkZ2V0X19oZWFkaW5nLS11c2VyLW5hbWVgXG4gICAgKTtcblxuICAgIC8vIEluc2VydGFyIGVsIG5vbWJyZSBkZWwgdXN1YXJpbyBlbiBlbCBIVE1MXG4gICAgYnVkZ2V0VXNlck5hbWUudGV4dENvbnRlbnQgPSBgJHt1c2VyTmFtZX0hYDtcbiAgfVxuXG4gIGluc2VydEJ1ZGdldChxdWFudGl0eSkge1xuICAgIGNvbnN0IHsgYnVkZ2V0VG90YWwsIGJ1ZGdldEF2YWlsYWJsZSB9ID0gcXVhbnRpdHk7XG5cbiAgICAvLyBGb3JtYXRlYXIgZWwgdG90YWwgeSBkaXNwb25pYmxlIGVuIG1vbmVkYSBsb2NhbCBNWE5cbiAgICBsZXQgZm9ybWF0dGVkVG90YWwgPSBidWRnZXRUb3RhbC50b0xvY2FsZVN0cmluZyhcImVzLU1YXCIsIHtcbiAgICAgIHN0eWxlOiBcImN1cnJlbmN5XCIsXG4gICAgICBjdXJyZW5jeTogXCJNWE5cIixcbiAgICB9KTtcbiAgICBsZXQgZm9ybWF0dGVkQXZhaWxhYmxlID0gYnVkZ2V0QXZhaWxhYmxlLnRvTG9jYWxlU3RyaW5nKFwiZXMtTVhcIiwge1xuICAgICAgc3R5bGU6IFwiY3VycmVuY3lcIixcbiAgICAgIGN1cnJlbmN5OiBcIk1YTlwiLFxuICAgIH0pO1xuXG4gICAgLy8gSW5zZXJ0YXIgZWwgdG90YWwgeSBkaXNwb25pYmxlIGVuIGVsIEhUTUxcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCNidWRnZXRDYXJkVG90YWxgXG4gICAgKS50ZXh0Q29udGVudCA9IGAke2Zvcm1hdHRlZFRvdGFsfWA7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAjYnVkZ2V0Q2FyZEF2YWlsYWJsZWBcbiAgICApLnRleHRDb250ZW50ID0gYCR7Zm9ybWF0dGVkQXZhaWxhYmxlfWA7XG4gIH1cbn1cblxuLy8gSW5zdGFuY2lhciBsYSBVSVxuY29uc3QgdXNlckludGVyZmFjZSA9IG5ldyBVc2VySW50ZXJmYWNlKCk7XG5cbi8qIEZ1bmNpb25lcyAqL1xuZnVuY3Rpb24gcmVxdWVzdE5hbWUoKSB7XG4gIGxldCB1c2VyTmFtZTtcblxuICAvLyBTb2xpY2l0YXIgZWwgbm9tYnJlIGRlbCB1c3VhcmlvIGhhc3RhIHF1ZSBzZSBpbmdyZXNlIHVuIHZhbG9yIHbDoWxpZG9cbiAgZG8ge1xuICAgIHVzZXJOYW1lID0gcHJvbXB0KGDCv0N1w6FsIGVzIHR1IG5vbWJyZT9gKTtcblxuICAgIC8vIFZhbGlkYXIgZWwgbm9tYnJlXG4gICAgaWYgKCF1c2VyTmFtZSkge1xuICAgICAgYWxlcnQoYFBvciBmYXZvciwgaW50cm9kdWNlIHVuIG5vbWJyZSB2w6FsaWRvLmApO1xuICAgIH1cblxuICAgIFxuICB9IHdoaWxlICghdXNlck5hbWUpO1xuXG4gIC8vIExsYW1hciBhbCBtw6l0b2RvIHBhcmEgaW5zZXJ0YXIgZWwgbm9tYnJlIGVuIGxhIFVJXG4gIHVzZXJJbnRlcmZhY2UuaW5zZXJ0TmFtZSh1c2VyTmFtZSk7XG59XG5cbmZ1bmN0aW9uIHJlcXVlc3RCdWRnZXQoKSB7XG4gIGNvbnN0IHVzZXJCdWRnZXQgPSBOdW1iZXIocHJvbXB0KGDCv0N1w6FsIGVzIHR1IHByZXN1cHVlc3RvP2ApKTtcbiAgY29uc3Qgdm9pZFZhbHVlID0gYGA7XG5cbiAgaWYgKFxuICAgIHVzZXJCdWRnZXQgPT09IHZvaWRWYWx1ZSB8fFxuICAgIHVzZXJCdWRnZXQgPT09IG51bGwgfHxcbiAgICBpc05hTih1c2VyQnVkZ2V0KSB8fFxuICAgIHVzZXJCdWRnZXQgPD0gMFxuICApIHtcbiAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gIH1cblxuICAvLyBDcmVhciBpbnN0YW5jaWEgZGUgXCJCdWRnZXRcIiB5IGVzdGFibGVjZXJsb1xuICBidWRnZXQgPSBuZXcgQnVkZ2V0KHVzZXJCdWRnZXQpO1xuXG4gIC8vIExsYW1hciBhbCBtw6l0b2RvIHBhcmEgaW5zZXJ0YXIgZWwgcHJlc3VwdWVzdG8gZW4gbGEgVUlcbiAgdXNlckludGVyZmFjZS5pbnNlcnRCdWRnZXQoYnVkZ2V0KTtcbn1cblxuZnVuY3Rpb24gYnVkZ2V0Rm9ybUV2ZW50cygpIHtcbiAgLy8gT2J0ZW5lciBlbCBmb3JtdWxhcmlvIHkgc3VzIGV2ZW50b3NcbiAgY29uc3QgYnVkZ2V0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNidWRnZXRGb3JtYCk7XG4gIGJ1ZGdldEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihgc3VibWl0YCwgYWRkRXhwZW5zZSk7XG59XG5cbmZ1bmN0aW9uIGFkZEV4cGVuc2UoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgLy8gT2J0ZW5lciBsb3MgdmFsb3JlcyBkZWwgZm9ybXVsYXJpb1xuICBjb25zdCBpbnB1dEV4cGVuc2VOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2V4cGVuc2VOYW1lYCkudmFsdWU7XG4gIGNvbnN0IGlucHV0RXhwZW5zZUFtb3VudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNleHBlbnNlQW1vdW50YCkudmFsdWU7XG4gIGNvbnN0IHNlbGVjdEV4cGVuc2VDYXRlZ29yeSA9XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2V4cGVuc2VDYXRlZ29yeWApLnZhbHVlO1xufVxuIl19
