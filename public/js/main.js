const expensesList=document.querySelector("#expensesList");function startApp(){loadLocalStorage(),budgetFormEvents()}document.addEventListener("DOMContentLoaded",startApp);class Budget{constructor(e){this.budgetTotal=e,this.budgetAvailable=e,this.budgetSpent=0,this.expenses=[]}newExpenses(e){e.inputAmount>this.budgetAvailable?userInterface.printAlerts("No tienes fondos suficientes","error"):(this.expenses=[...this.expenses,e],this.calculateSpent(),userInterface.printAlerts("Se agregó correctamente","success"))}calculateSpent(){this.budgetSpent=this.expenses.reduce((e,t)=>e+t.inputAmount,0),this.budgetAvailable=this.budgetTotal-this.budgetSpent}deleteExpense(e){const t=this.expenses.filter(t=>t.id!==e);this.expenses=t,this.calculateSpent()}}class UserInterface{insertName(e){document.querySelector(".budget__heading--user-name").textContent=e+"!"}insertBudget(e){const{budgetTotal:t,budgetAvailable:n,budgetSpent:s}=e;let r=t.toLocaleString("es-MX",{style:"currency",currency:"MXN"}),u=n.toLocaleString("es-MX",{style:"currency",currency:"MXN"}),a=s.toLocaleString("es-MX",{style:"currency",currency:"MXN"});document.querySelector("#budgetCardTotal").textContent=""+r,document.querySelector("#budgetCardAvailable").textContent=""+u,document.querySelector("#budgetCardSpent").textContent=""+a}printAlerts(e,t){let n=document.querySelector(".alert--"+t);if(n)return void(n.textContent=e);const s=document.createElement("p");s.classList.add("alert"),"error"===t?s.classList.add("alert--error"):s.classList.add("alert--success"),s.textContent=e;document.querySelector("#budgetForm").appendChild(s),setTimeout(()=>{s.remove()},2e3)}showExpenseList(e){this.cleanHtml(),e.forEach(e=>{const{inputName:t,inputAmount:n,selectedCategory:s,id:r}=e,u=n.toLocaleString("es-MX",{style:"currency",currency:"MXN"}),a=document.createElement("li");a.className="expense-item",a.dataset.id=r,a.dataset.category=s,a.innerHTML=`\n        <div class="expense-item__texts">\n          <p class="expense-item__description">${t}</p>\n          <p class="expense-item__price">${u}</p>\n        </div>\n      `;const o=document.createElement("button");o.classList.add("expense-item__btn"),o.textContent="X",o.addEventListener("click",()=>{deleteExpense(r)}),a.appendChild(o),expensesList.appendChild(a)})}cleanHtml(){for(;expensesList.firstChild;)expensesList.removeChild(expensesList.firstChild)}updateAvailableBudget(e,t){let n=e.toLocaleString("es-MX",{style:"currency",currency:"MXN"}),s=t.toLocaleString("es-MX",{style:"currency",currency:"MXN"});document.querySelector("#budgetCardAvailable").textContent=""+n,document.querySelector("#budgetCardSpent").textContent=""+s}checkBudget(e){const{budgetTotal:t,budgetAvailable:n}=e,s=document.querySelector(".budget-form__btn");n<=0?(userInterface.printAlerts("El presupuesto se ha agotado","error"),s.disabled=!0):s.disabled=!1}}let budget;const userInterface=new UserInterface;function loadLocalStorage(){let e=JSON.parse(localStorage.getItem("username")),t=JSON.parse(localStorage.getItem("budget"));if(e?userInterface.insertName(e):requestName(e),t){const{budgetTotal:e,budgetAvailable:n,budgetSpent:s,expenses:r}=t;budget=new Budget(e),budget.budgetAvailable=n,budget.budgetSpent=s,budget.expenses=r,userInterface.insertBudget(budget),loadExpensesToLocalStorage()}else requestBudget()}function loadExpensesToLocalStorage(){const{budgetAvailable:e,budgetSpent:t,expenses:n}=budget;userInterface.showExpenseList(n),userInterface.updateAvailableBudget(e,t),userInterface.checkBudget(budget)}function requestName(e){do{(e=prompt("¿Cuál es tu nombre?"))||alert("Por favor, introduce un nombre válido.")}while(!e);userInterface.insertName(e),saveToLocalStorage("username",e)}function requestBudget(){const e=Number(prompt("¿Cuál es tu presupuesto?"));(""===e||null===e||isNaN(e)||e<=0)&&window.location.reload(),budget=new Budget(e),userInterface.insertBudget(budget),saveToLocalStorage("budget",budget)}function budgetFormEvents(){document.querySelector("#budgetForm").addEventListener("submit",addExpense)}function addExpense(e){e.preventDefault();const t=document.querySelector("#budgetFormName").value,n=Number(document.querySelector("#budgetFormAmount").value),s=document.querySelector("#budgetFormCategory").value;if(""===t||""===n||""===s)return void userInterface.printAlerts("Todos los campos son obligatorios","error");if(n<=0||isNaN(n))return void userInterface.printAlerts("Cantidad no valida","error");const r={inputName:t,inputAmount:n,selectedCategory:s,id:Date.now()};budget.newExpenses(r);const{expenses:u,budgetAvailable:a,budgetSpent:o}=budget;userInterface.showExpenseList(u),userInterface.updateAvailableBudget(a,o),userInterface.checkBudget(budget);document.querySelector("#budgetForm").reset(),saveToLocalStorage("budget",budget)}function deleteExpense(e){budget.deleteExpense(e);const{expenses:t,budgetAvailable:n,budgetSpent:s}=budget;userInterface.showExpenseList(t),userInterface.updateAvailableBudget(n,s),userInterface.checkBudget(budget),saveToLocalStorage("budget",budget)}function saveToLocalStorage(e,t){localStorage.setItem(e,JSON.stringify(t))}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
